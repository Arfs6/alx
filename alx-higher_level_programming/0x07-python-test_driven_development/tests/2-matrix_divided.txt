>>> matrix_divided = __import__("2-matrix_divided").matrix_divided
>>> matrix = [[3, 5, 7], [2, 4, 6]]
>>> # testing for correct matrix divided by int
>>> matrix_divided(matrix, 2)
[[1.5, 2.5, 3.5], [1.0, 2.0, 3.0]]
>>> # testing for dividing correct matrix with float
>>> matrix_divided(matrix, 2.5)
[[1.2, 2.0, 2.8], [0.8, 1.6, 2.4]]
>>> # testing for floats in matrix
>>> matrix.append([2.4, 6.3, 99.5])
>>> matrix_divided(matrix, 4)
[[0.75, 1.25, 1.75], [0.5, 1.0, 1.5], [0.6, 1.57, 24.88]]
>>> #  testing for None as matrix
>>> matrix_divided(None, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> # testing for list of strings as matrix
>>> matrix_divided([['my', 34], [None, (1, 3)]], 5)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> # testing for unequal lists
>>> matrix.pop()
[2.4, 6.3, 99.5]
>>> matrix.append([1])
>>> matrix_divided(matrix, 5)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size
>>> matrix_divided() 
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
>>> matrix_divided([[1, 2]]) 
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>>  
